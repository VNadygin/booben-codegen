{"version":3,"sources":["../lib/generateEntryPointFile.js"],"names":["generate","require","default","t","template","defaultContainerId","componentsDirectory","fileTemplate","sourceType","plugins","apolloInitTemplate","generateEntryPointFile","model","urlPrefix","containerId","imports","usingGraphQL","apolloClientImport","importDeclaration","importSpecifier","identifier","stringLiteral","apolloProviderImport","createHttpLinkImport","inMemoryCache","setContext","push","routeElements","redirects","forEach","redirectElement","jSXElement","jSXOpeningElement","jSXIdentifier","jSXAttribute","redirect","from","to","type","jSXExpressionContainer","logicalExpression","unaryExpression","rootRoutes","route","routes","routeId","routeComponentName","file","name","routeElement","fullPath","pathToComponentFile","importDefaultSpecifier","switchElement","jSXClosingElement","rootJSXElement","apolloInit","GRAPHQL_URL","project","graphQLEndpointURL","declarations","IMPORTS","APOLLO_INIT","CONTAINER_ID","JSX","fileAST","program","code","module","exports"],"mappings":"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","file":"generateEntryPointFile.js","sourcesContent":["/**\n * @author Dmitriy Bizyaev\n */\n\n'use strict';\n\nconst generate = require('babel-generator').default;\nconst t = require('babel-types');\nconst template = require('babel-template');\nconst { defaultContainerId, componentsDirectory } = require('./constants');\n\nconst fileTemplate = template(\n  `\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import { Router, Switch, Route, Redirect } from 'react-router';\n    import { BrowserRouter } from 'react-router-dom';\n    import './styles.js'\n\n    IMPORTS\n    \n    APOLLO_INIT\n    \n    ReactDOM.render(\n      JSX,\n      document.getElementById(CONTAINER_ID),\n    );\n  `,\n  {\n    sourceType: 'module',\n    plugins: ['jsx'],\n  }\n);\n\nconst apolloInitTemplate = template(\n  `\n  const httpLink = createHttpLink({\n    uri: GRAPHQL_URL\n  });\n\n  const token = localStorage.getItem('token');\n\n  const authLink = setContext((_, { headers }) => {\n    let authorization = \"\"\n\n    if (token) {\n      authorization = \"Bearer \" + token\n    } \n\n    return {\n      headers: {\n        ...headers,\n        authorization,\n      }\n    }\n  });\n\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n`,\n  {\n    sourceType: 'module',\n    plugins: ['objectRestSpread'],\n  }\n);\n\n/**\n *\n * @param {JssyProjectModel} model\n * @param {string} [urlPrefix='/']\n * @param {string} [containerId='jssy-app-container']\n * @return {string}\n */\nconst generateEntryPointFile = (\n  model,\n  { urlPrefix = '/', containerId = defaultContainerId } = {}\n) => {\n  const imports = [];\n\n  if (model.usingGraphQL) {\n    const apolloClientImport = t.importDeclaration(\n      [\n        t.importSpecifier(\n          t.identifier('ApolloClient'),\n          t.identifier('ApolloClient')\n        ),\n      ],\n      t.stringLiteral('apollo-client')\n    );\n\n    const apolloProviderImport = t.importDeclaration(\n      [\n        t.importSpecifier(\n          t.identifier('ApolloProvider'),\n          t.identifier('ApolloProvider')\n        ),\n      ],\n      t.stringLiteral('react-apollo')\n    );\n\n    const createHttpLinkImport = t.importDeclaration(\n      [\n        t.importSpecifier(\n          t.identifier('createHttpLink'),\n          t.identifier('createHttpLink')\n        ),\n      ],\n      t.stringLiteral('apollo-link-http')\n    );\n\n    const inMemoryCache = t.importDeclaration(\n      [\n        t.importSpecifier(\n          t.identifier('InMemoryCache'),\n          t.identifier('InMemoryCache')\n        ),\n      ],\n      t.stringLiteral('apollo-cache-inmemory')\n    );\n\n    const setContext = t.importDeclaration(\n      [\n        t.importSpecifier(\n          t.identifier('setContext'),\n          t.identifier('setContext')\n        ),\n      ],\n      t.stringLiteral('apollo-link-context')\n    );\n\n    imports.push(apolloClientImport);\n    imports.push(apolloProviderImport);\n    imports.push(createHttpLinkImport);\n    imports.push(inMemoryCache);\n    imports.push(setContext);\n  }\n\n  const routeElements = [];\n\n  model.redirects.forEach(redirect => {\n    const redirectElement = t.jSXElement(\n      t.jSXOpeningElement(\n        t.jSXIdentifier('Redirect'),\n        [\n          t.jSXAttribute(t.jSXIdentifier('exact')),\n          t.jSXAttribute(\n            t.jSXIdentifier('from'),\n            t.stringLiteral(redirect.from)\n          ),\n          t.jSXAttribute(t.jSXIdentifier('to'), t.stringLiteral(redirect.to)),\n        ],\n        true\n      ),\n      null,\n      []\n    );\n    if (redirect.type === 'always') {\n      routeElements.push(redirectElement);\n    } else if (redirect.type === 'hasAuth') {\n      routeElements.push(\n        t.jSXExpressionContainer(\n          t.logicalExpression('&&', t.identifier('token'), redirectElement)\n        )\n      );\n    } else if (redirect.type === 'anonymous') {\n      routeElements.push(\n        t.jSXExpressionContainer(\n          t.logicalExpression(\n            '&&',\n            t.unaryExpression('!', t.identifier('token')),\n            redirectElement\n          )\n        )\n      );\n    }\n  });\n\n  model.rootRoutes.forEach(routeId => {\n    const route = model.routes[routeId];\n    const routeComponentName = route.file.name;\n\n    const routeElement = t.jSXElement(\n      t.jSXOpeningElement(\n        t.jSXIdentifier('Route'),\n        [\n          t.jSXAttribute(\n            t.jSXIdentifier('path'),\n            t.stringLiteral(route.fullPath)\n          ),\n          t.jSXAttribute(\n            t.jSXIdentifier('component'),\n            t.jSXExpressionContainer(t.identifier(routeComponentName))\n          ),\n        ],\n        true\n      ),\n      null,\n      []\n    );\n\n    const pathToComponentFile = `./${componentsDirectory}/${routeComponentName}/${routeComponentName}`;\n\n    const importDeclaration = t.importDeclaration(\n      [t.importDefaultSpecifier(t.identifier(routeComponentName))],\n      t.stringLiteral(pathToComponentFile)\n    );\n\n    routeElements.push(routeElement);\n    imports.push(importDeclaration);\n  });\n\n  const switchElement = t.jSXElement(\n    t.jSXOpeningElement(t.jSXIdentifier('Switch'), []),\n    t.jSXClosingElement(t.jSXIdentifier('Switch')),\n    routeElements\n  );\n\n  let rootJSXElement = t.jSXElement(\n    t.jSXOpeningElement(t.jSXIdentifier('BrowserRouter'), [\n      t.jSXAttribute(t.jSXIdentifier('basename'), t.stringLiteral(urlPrefix)),\n    ]),\n    t.jSXClosingElement(t.jSXIdentifier('BrowserRouter')),\n    [switchElement]\n  );\n\n  let apolloInit = [];\n\n  if (model.usingGraphQL) {\n    rootJSXElement = t.jSXElement(\n      t.jSXOpeningElement(t.jSXIdentifier('ApolloProvider'), [\n        t.jSXAttribute(\n          t.jSXIdentifier('client'),\n          t.jSXExpressionContainer(t.identifier('client'))\n        ),\n      ]),\n      t.jSXClosingElement(t.jSXIdentifier('ApolloProvider')),\n      [rootJSXElement]\n    );\n\n    apolloInit = apolloInitTemplate({\n      GRAPHQL_URL: t.stringLiteral(model.project.graphQLEndpointURL),\n    });\n  }\n\n  const declarations = fileTemplate({\n    IMPORTS: imports,\n    APOLLO_INIT: apolloInit,\n    CONTAINER_ID: t.stringLiteral(containerId),\n    JSX: rootJSXElement,\n  });\n\n  const fileAST = t.file(t.program(declarations));\n\n  return generate(fileAST).code;\n};\n\nmodule.exports = generateEntryPointFile;\n"]}