{"version":3,"sources":["../lib/generateImportsAST.js"],"names":["t","require","functionsFile","helpersFile","generateImportsAST","file","model","nestingLevel","ret","reactImportDeclaration","importDeclaration","importDefaultSpecifier","identifier","stringLiteral","push","usingGraphQL","graphqlImportDeclaration","importSpecifier","gqlTagDeclaration","usingReactRouter","reactRouterImportDeclaration","importComponents","forEach","componentNames","namespace","libMeta","meta","Array","from","map","name","moduleName","importFiles","fileName","importHelpers","repeat","nestedFiles","nestedFile","importProjectFunctions","size","functionsModule","slice","functionNames","functionsImportDeclaration","module","exports"],"mappings":"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","file":"generateImportsAST.js","sourcesContent":["/**\n * @author Dmitriy Bizyaev\n */\n\n'use strict';\n\nconst t = require('babel-types');\nconst { functionsFile, helpersFile } = require('./constants');\n\n/**\n *\n * @param {ComponentFileModel} file\n * @param {JssyProjectModel} model\n * @param {number} [nestingLevel=0]\n * @return {Array<ImportDeclaration>}\n */\nconst generateImportsAST = (file, model, nestingLevel = 0) => {\n  const ret = [];\n\n  // import React from 'react';\n  const reactImportDeclaration = t.importDeclaration(\n    [t.importDefaultSpecifier(t.identifier('React'))],\n    t.stringLiteral('react')\n  );\n\n  ret.push(reactImportDeclaration);\n\n  if (file.usingGraphQL) {\n    const graphqlImportDeclaration = t.importDeclaration(\n      [\n        t.importSpecifier(t.identifier('graphql'), t.identifier('graphql')),\n        t.importSpecifier(t.identifier('compose'), t.identifier('compose')),\n      ],\n      t.stringLiteral('react-apollo')\n    );\n\n    const gqlTagDeclaration = t.importDeclaration(\n      [t.importDefaultSpecifier(t.identifier('gql'))],\n      t.stringLiteral('graphql-tag')\n    );\n\n    ret.push(gqlTagDeclaration);\n    ret.push(graphqlImportDeclaration);\n  }\n\n  if (file.usingReactRouter) {\n    // import { Route, Switch } from 'react-router';\n    const reactRouterImportDeclaration = t.importDeclaration(\n      [\n        t.importSpecifier(t.identifier('Route'), t.identifier('Route')),\n        t.importSpecifier(t.identifier('Switch'), t.identifier('Switch')),\n      ],\n      t.stringLiteral('react-router')\n    );\n\n    ret.push(reactRouterImportDeclaration);\n  }\n\n  file.importComponents.forEach((componentNames, namespace) => {\n    const libMeta = model.meta[namespace];\n    if (libMeta.namespace !== 'HTML') {\n      // import { /* componentNames[0], ... */ } from '/* libMeta.moduleName */';\n      const importDeclaration = t.importDeclaration(\n        Array.from(componentNames).map(name =>\n          t.importSpecifier(t.identifier(name), t.identifier(name))\n        ),\n        t.stringLiteral(libMeta.moduleName)\n      );\n\n      ret.push(importDeclaration);\n    }\n  });\n\n  file.importFiles.forEach(fileName => {\n    // import /* fileName */ from '..//* fileName *///* fileName */';\n    const importDeclaration = t.importDeclaration(\n      [t.importDefaultSpecifier(t.identifier(fileName))],\n      t.stringLiteral(`../${fileName}/${fileName}`)\n    );\n\n    ret.push(importDeclaration);\n  });\n\n  file.importHelpers.forEach(name => {\n    // import { /* name */ } from './/* nestedFile.name *///* nestedFile.name */';\n    const importDeclaration = t.importDeclaration(\n      [t.importSpecifier(t.identifier(name), t.identifier(name))],\n      t.stringLiteral(`../../${'../'.repeat(nestingLevel)}${helpersFile}`)\n    );\n\n    ret.push(importDeclaration);\n  });\n\n  file.nestedFiles.forEach(nestedFile => {\n    // import /* nestedFile.name */ from './/* nestedFile.name *///* nestedFile.name */';\n    const importDeclaration = t.importDeclaration(\n      [t.importDefaultSpecifier(t.identifier(nestedFile.name))],\n      t.stringLiteral(`./${nestedFile.name}/${nestedFile.name}`)\n    );\n\n    ret.push(importDeclaration);\n  });\n\n  if (file.importProjectFunctions.size > 0) {\n    const functionsModule = functionsFile.slice(0, -3); // remove .js\n    const functionNames = Array.from(file.importProjectFunctions);\n\n    // import { /* functionNames[0], ... */ } from '../..//* functionsModule */';\n    const functionsImportDeclaration = t.importDeclaration(\n      functionNames.map(name =>\n        t.importSpecifier(t.identifier(name), t.identifier(name))\n      ),\n      t.stringLiteral(`../../${'../'.repeat(nestingLevel)}${functionsModule}`) // remove .js\n    );\n\n    ret.push(functionsImportDeclaration);\n  }\n\n  return ret;\n};\n\nmodule.exports = generateImportsAST;\n"]}