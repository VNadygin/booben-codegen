{"version":3,"sources":["../lib/generateRefsAST.js"],"names":["t","require","formatComponentRefKey","formatComponentSaveRefMethodName","generateRefsAST","initRefASTs","saveRefASTs","bindSaveRefASTs","file","refs","forEach","component","components","componentId","refKey","methodName","initRefAST","expressionStatement","assignmentExpression","memberExpression","thisExpression","identifier","nullLiteral","saveRefAST","classMethod","blockStatement","bindSaveRefAST","callExpression","push","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,IAAMA,IAAIC,QAAQ,aAAR,CAAV;;eAKIA,QAAQ,SAAR,C;IAFFC,qB,YAAAA,qB;IACAC,gC,YAAAA,gC;;AAGF;;;;;;;AAKA,IAAMC,kBAAkB,SAAlBA,eAAkB,OAAQ;AAC9B,MAAMC,cAAc,EAApB;AACA,MAAMC,cAAc,EAApB;AACA,MAAMC,kBAAkB,EAAxB;;AAEAC,OAAKC,IAAL,CAAUC,OAAV,CAAkB,uBAAe;AAC/B,QAAMC,YAAYH,KAAKI,UAAL,CAAgBC,WAAhB,CAAlB;AACA,QAAMC,SAASZ,sBAAsBS,SAAtB,CAAf;AACA,QAAMI,aAAaZ,iCAAiCQ,SAAjC,CAAnB;;AAEA;AACA,QAAMK,aAAahB,EAAEiB,mBAAF,CACjBjB,EAAEkB,oBAAF,CACE,GADF,EAEElB,EAAEmB,gBAAF,CAAmBnB,EAAEoB,cAAF,EAAnB,EAAuCpB,EAAEqB,UAAF,CAAaP,MAAb,CAAvC,CAFF,EAGEd,EAAEsB,WAAF,EAHF,CADiB,CAAnB;;AAQA;AACA;AACA;AACA,QAAMC,aAAavB,EAAEwB,WAAF,CACjB,QADiB,EAEjBxB,EAAEqB,UAAF,CAAaN,UAAb,CAFiB,EAGjB,CAACf,EAAEqB,UAAF,CAAa,KAAb,CAAD,CAHiB,EAIjBrB,EAAEyB,cAAF,CAAiB,CACfzB,EAAEiB,mBAAF,CACEjB,EAAEkB,oBAAF,CACE,GADF,EAEElB,EAAEmB,gBAAF,CAAmBnB,EAAEoB,cAAF,EAAnB,EAAuCpB,EAAEqB,UAAF,CAAaP,MAAb,CAAvC,CAFF,EAGEd,EAAEqB,UAAF,CAAa,KAAb,CAHF,CADF,CADe,CAAjB,CAJiB,CAAnB;;AAeA;AACA,QAAMK,iBAAiB1B,EAAEiB,mBAAF,CACrBjB,EAAEkB,oBAAF,CACE,GADF,EAEElB,EAAEmB,gBAAF,CAAmBnB,EAAEoB,cAAF,EAAnB,EAAuCpB,EAAEqB,UAAF,CAAaN,UAAb,CAAvC,CAFF,EAGEf,EAAE2B,cAAF,CACE3B,EAAEmB,gBAAF,CACEnB,EAAEmB,gBAAF,CAAmBnB,EAAEoB,cAAF,EAAnB,EAAuCpB,EAAEqB,UAAF,CAAaN,UAAb,CAAvC,CADF,EAEEf,EAAEqB,UAAF,CAAa,MAAb,CAFF,CADF,EAKE,CAACrB,EAAEoB,cAAF,EAAD,CALF,CAHF,CADqB,CAAvB;;AAcAf,gBAAYuB,IAAZ,CAAiBZ,UAAjB;AACAV,gBAAYsB,IAAZ,CAAiBL,UAAjB;AACAhB,oBAAgBqB,IAAhB,CAAqBF,cAArB;AACD,GAlDD;;AAoDA,SAAO,EAAErB,wBAAF,EAAeC,wBAAf,EAA4BC,gCAA5B,EAAP;AACD,CA1DD;;AA4DAsB,OAAOC,OAAP,GAAiB1B,eAAjB","file":"generateRefsAST.js","sourcesContent":["/**\n * @author Dmitriy Bizyaev\n */\n\n'use strict';\n\nconst t = require('babel-types');\n\nconst {\n  formatComponentRefKey,\n  formatComponentSaveRefMethodName,\n} = require('./names');\n\n/**\n *\n * @param {ComponentFileModel} file\n * @return {{ initRefASTs: Array<ExpressionStatement>, saveRefASTs: Array<ClassMethod>, bindSaveRefASTs: Array<ExpressionStatement> }}\n */\nconst generateRefsAST = file => {\n  const initRefASTs = [];\n  const saveRefASTs = [];\n  const bindSaveRefASTs = [];\n\n  file.refs.forEach(componentId => {\n    const component = file.components[componentId];\n    const refKey = formatComponentRefKey(component);\n    const methodName = formatComponentSaveRefMethodName(component);\n\n    // this./*refKey*/ = null;\n    const initRefAST = t.expressionStatement(\n      t.assignmentExpression(\n        '=',\n        t.memberExpression(t.thisExpression(), t.identifier(refKey)),\n        t.nullLiteral()\n      )\n    );\n\n    // /*methodName*/(ref) {\n    //   this./*refKey*/ = ref;\n    // }\n    const saveRefAST = t.classMethod(\n      'method',\n      t.identifier(methodName),\n      [t.identifier('ref')],\n      t.blockStatement([\n        t.expressionStatement(\n          t.assignmentExpression(\n            '=',\n            t.memberExpression(t.thisExpression(), t.identifier(refKey)),\n            t.identifier('ref')\n          )\n        ),\n      ])\n    );\n\n    // this./*methodName*/ = this./*methodName*/.bind(this);\n    const bindSaveRefAST = t.expressionStatement(\n      t.assignmentExpression(\n        '=',\n        t.memberExpression(t.thisExpression(), t.identifier(methodName)),\n        t.callExpression(\n          t.memberExpression(\n            t.memberExpression(t.thisExpression(), t.identifier(methodName)),\n            t.identifier('bind')\n          ),\n          [t.thisExpression()]\n        )\n      )\n    );\n\n    initRefASTs.push(initRefAST);\n    saveRefASTs.push(saveRefAST);\n    bindSaveRefASTs.push(bindSaveRefAST);\n  });\n\n  return { initRefASTs, saveRefASTs, bindSaveRefASTs };\n};\n\nmodule.exports = generateRefsAST;\n"]}