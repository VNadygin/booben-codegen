{"version":3,"sources":["../lib/misc.js"],"names":["require","INVALID_ID","concatPath","prefix","path","normalizeComponents","rootComponent","accumulator","parentId","id","children","map","childComponent","forEach","normalizeRoutes","routes","currentFullPath","visitRoute","fullPath","route","components","component","indexComponent","rootComponentId","indexComponentId","childRoute","parseComponentName","componentName","split","namespace","name","formatComponentName","miscMeta","HTMLMeta","getComponentMeta","meta","getContainerStyle","combinedStyle","Object","keys","reduce","acc","cur","assign","containerStyle","prop","join","module","exports"],"mappings":"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","file":"misc.js","sourcesContent":["/**\n * @author Dmitriy Bizyaev\n */\n\n'use strict';\n\nconst { INVALID_ID } = require('./constants');\n\nconst concatPath = (prefix, path) => {\n  if (prefix === '') return path;\n  if (prefix === '/') return `/${path}`;\n  return `${prefix}/${path}`;\n};\n\nconst normalizeComponents = (\n  rootComponent,\n  accumulator = {},\n  parentId = INVALID_ID\n) => {\n  if (rootComponent === null) {\n    return accumulator;\n  }\n\n  accumulator[rootComponent.id] = {\n    ...rootComponent,\n    parentId,\n    children: rootComponent.children.map(childComponent => childComponent.id),\n  };\n\n  rootComponent.children.forEach(childComponent =>\n    normalizeComponents(childComponent, accumulator, rootComponent.id)\n  );\n\n  return accumulator;\n};\n\nconst normalizeRoutes = (\n  routes,\n  accumulator = {},\n  currentFullPath = '',\n  parentId = INVALID_ID\n) => {\n  const visitRoute = route => {\n    const fullPath = concatPath(currentFullPath, route.path);\n\n    accumulator[route.id] = {\n      ...route,\n      parentId,\n      fullPath,\n      components: {\n        ...normalizeComponents(route.component),\n        ...normalizeComponents(route.indexComponent),\n      },\n      rootComponentId:\n        route.component !== null ? route.component.id : INVALID_ID,\n      indexComponentId:\n        route.indexComponent !== null ? route.indexComponent.id : INVALID_ID,\n      children: route.children.map(childRoute => childRoute.id),\n    };\n\n    normalizeRoutes(route.children, accumulator, fullPath, route.id);\n  };\n\n  routes.forEach(visitRoute);\n\n  return accumulator;\n};\n\nconst parseComponentName = componentName => {\n  let [namespace, name] = componentName.split('.');\n\n  if (!name) {\n    name = namespace;\n    namespace = '';\n  }\n\n  return { namespace, name };\n};\n\nconst formatComponentName = (namespace, name) => {\n  if (!namespace) {\n    return name;\n  }\n\n  return `${namespace}.${name}`;\n};\n\n// TODO: Move metadata for builtin components to jssy-common and import it here\nconst miscMeta = { components: {} };\nconst HTMLMeta = { components: {} };\n\nconst getComponentMeta = (componentName, meta) => {\n  const { namespace, name } = parseComponentName(componentName);\n  let components;\n\n  if (namespace === '') components = miscMeta.components;\n  else if (namespace === 'HTML') components = HTMLMeta.components;\n  else components = meta[namespace] ? meta[namespace].components : null;\n\n  return components ? components[name] || null : null;\n};\n\n/**\n *\n * @param {Object} meta\n * @return {string}\n */\nconst getContainerStyle = meta => {\n  const combinedStyle = Object.keys(meta).reduce(\n    (acc, cur) => Object.assign(acc, meta[cur].containerStyle || {}),\n    {}\n  );\n\n  return Object.keys(combinedStyle)\n    .map(prop => `${prop}:${combinedStyle[prop]}`)\n    .join(';');\n};\n\nmodule.exports = {\n  normalizeComponents,\n  normalizeRoutes,\n  parseComponentName,\n  formatComponentName,\n  getComponentMeta,\n  getContainerStyle,\n};\n"]}