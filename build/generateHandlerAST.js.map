{"version":3,"sources":["../lib/generateHandlerAST.js"],"names":["template","require","t","generate","default","_","generateJssyValueAST","formatHandlerName","formatStateKeyForProp","formatComponentStateSlotKey","formatComponentRefKey","createActionUrl","url","newWindow","expressionStatement","callExpression","identifier","stringLiteral","booleanLiteral","createActionNavigate","file","routeId","routeParams","routePath","routePaths","get","isEmpty","paramIndex","search","path","substring","paramName","routeParamsAst","code","pathWithParams","createActionMethod","componentId","method","args","component","components","refKey","argumentsAst","map","argValue","memberExpression","thisExpression","createActionAjax","params","body","decodeResponse","mode","successActions","errorActions","urlValue","bodyValue","decodeResponseAST","actionTemplate","URL","BODY","DECODE","SUCCESS_ACTIONS","createAction","ERROR_ACTIONS","createPropAction","propName","systemPropName","value","actualPropName","isSystemProp","targetComponent","stateKey","valueExpression","objectExpression","objectProperty","arrowFunctionExpression","createMutationAction","mutation","variables","Object","keys","key","setAuthTokenAST","auth","loginMutation","tokenPath","reduceRight","acc","cur","mutationActionTemplate","VARIABLES","SET_AUTH_TOKEN","action","createSetStateAction","stateSlot","type","Error","generateHandlerAST","actions","handlerName","actionExpressions","length","handlerAST","handlerBindingAST","classMethod","restElement","blockStatement","assignmentExpression","module","exports"],"mappings":"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","file":"generateHandlerAST.js","sourcesContent":["'use strict';\n\nconst template = require('babel-template');\nconst t = require('babel-types');\nconst generate = require('babel-generator').default;\nconst _ = require('lodash');\nconst generateJssyValueAST = require('./generateJssyValueAST');\n\nconst {\n  formatHandlerName,\n  formatStateKeyForProp,\n  formatComponentStateSlotKey,\n  formatComponentRefKey,\n} = require('./names');\n\n/**\n *\n * @param {string} url\n * @param {boolean} newWindow\n * @return {ExpressionStatement}\n */\nconst createActionUrl = ({ url, newWindow }) =>\n  t.expressionStatement(\n    t.callExpression(t.identifier('openUrl'), [\n      t.stringLiteral(url),\n      t.booleanLiteral(newWindow),\n    ])\n  );\n\nconst createActionNavigate = ({ routeId, routeParams }, file) => {\n  const routePath = file.routePaths.get(routeId);\n  if (_.isEmpty(routeParams)) {\n    return template(`\n      this.props.history.push('${routePath}')\n    `)();\n  } else {\n    const paramIndex = routePath.search(/:.*/);\n    const path = routePath.substring(0, paramIndex);\n    const paramName = routePath.substring(paramIndex + 1);\n    const routeParamsAst = generateJssyValueAST(\n      routeParams[paramName],\n      null,\n      file\n    );\n    const { code } = generate(routeParamsAst);\n    const pathWithParams = '`' + path + '${' + `${code}` + '}`';\n\n    return template(`\n      this.props.history.push(${pathWithParams})\n    `)();\n  }\n};\n\n/**\n *\n * @param {number} componentId\n * @param {string} method\n * @param {Array<Object>} args\n * @param {ComponentFileModel} file\n * @return {ExpressionStatement}\n */\nconst createActionMethod = ({ componentId, method, args }, file) => {\n  const component = file.components[componentId];\n  const refKey = formatComponentRefKey(component);\n  const argumentsAst = args.map(argValue =>\n    generateJssyValueAST(argValue, null, file)\n  );\n\n  return t.expressionStatement(\n    t.callExpression(\n      t.memberExpression(\n        t.memberExpression(t.thisExpression(), t.identifier(refKey)),\n        t.identifier(method)\n      ),\n      argumentsAst\n    )\n  );\n};\n\nconst createActionAjax = (params, file) => {\n  //TODO: Headers\n  const {\n    body,\n    decodeResponse,\n    method,\n    mode,\n    successActions,\n    url,\n    errorActions,\n  } = params;\n\n  const urlValue = generateJssyValueAST(url, null, file);\n  const bodyValue = generateJssyValueAST(body, null, file);\n  //TODO: ARRAY_BUFFER\n  let decodeResponseAST;\n  if (decodeResponse === 'text')\n    decodeResponseAST = template('return res.text()')();\n  else if (decodeResponse === 'json')\n    decodeResponseAST = template('return res.json()')();\n  else if (decodeResponse === 'blob')\n    decodeResponseAST = template('return res.blob()')();\n\n  const actionTemplate = template(`\n    fetch(URL, {\n      method: ${method},\n      credentials: ${mode}, \n      body: BODY,\n    })\n    .then(res => {\n      DECODE\n    })\n    .then(data => {\n      SUCCESS_ACTIONS\n    })\n    .catch(err => {\n      ERROR_ACTIONS\n    })\n\n  `);\n\n  return actionTemplate({\n    URL: urlValue,\n    BODY: bodyValue,\n    DECODE: decodeResponseAST,\n    SUCCESS_ACTIONS: successActions.map(createAction),\n    ERROR_ACTIONS: errorActions.map(createAction),\n  });\n};\n\n/**\n *\n * @param {number} componentId\n * @param {string} propName\n * @param {string} systemPropName\n * @param {Object} value\n * @param {ComponentFileModel} file\n * @return {ExpressionStatement}\n */\nconst createPropAction = (\n  { componentId, propName, systemPropName, value },\n  file\n) => {\n  let actualPropName;\n  let isSystemProp;\n\n  if (systemPropName) {\n    actualPropName = systemPropName;\n    isSystemProp = true;\n  } else {\n    actualPropName = propName;\n    isSystemProp = false;\n  }\n\n  const targetComponent = file.components[componentId];\n  const stateKey = formatStateKeyForProp(\n    targetComponent,\n    actualPropName,\n    isSystemProp\n  );\n\n  const valueExpression = generateJssyValueAST(value, null, file);\n\n  // this.setState({ /*setState*/: () => /*valueExpression*/ });\n  return t.expressionStatement(\n    t.callExpression(\n      t.memberExpression(t.thisExpression(), t.identifier('setState')),\n      [\n        t.objectExpression([\n          t.objectProperty(\n            t.identifier(stateKey),\n            t.arrowFunctionExpression([], valueExpression)\n          ),\n        ]),\n      ]\n    )\n  );\n};\n\n/**\n *\n * @param {string} mutation\n * @param {Object<string, Object>} args\n * @param {Array<Object>} successActions\n * @param {Array<Object>} errorActions\n * @param {ComponentFileModel} file\n * @return {ExpressionStatement}\n */\nconst createMutationAction = (\n  { mutation, args, successActions, errorActions },\n  file\n) => {\n  const variables = Object.keys(args).map(key =>\n    t.objectProperty(\n      t.identifier(key),\n      generateJssyValueAST(args[key], null, file)\n    )\n  );\n\n  let setAuthTokenAST;\n  if (file.auth.loginMutation === mutation) {\n    const tokenPath = file.auth.tokenPath.reduceRight(\n      (acc, cur) => `.${cur}` + acc,\n      ''\n    );\n\n    setAuthTokenAST = template(`\n      localStorage.setItem('token', data.${mutation}${tokenPath})\n    `)();\n  }\n\n  const mutationActionTemplate = template(`\n    this.props.${mutation}Mutation({\n      variables: VARIABLES\n    })\n    .then(data => {\n      SET_AUTH_TOKEN\n      SUCCESS_ACTIONS\n    })\n    .catch(err => {\n      ERROR_ACTIONS\n    })\n  `);\n\n  return mutationActionTemplate({\n    VARIABLES: t.objectExpression(variables),\n    SET_AUTH_TOKEN: setAuthTokenAST,\n    SUCCESS_ACTIONS: successActions.map(action => createAction(action, file)),\n    ERROR_ACTIONS: errorActions.map(action => createAction(action, file)),\n  });\n};\n\n/**\n *\n * @param {Object} params\n * @param {ComponentFileModel} file\n * @return {ExpressionStatement}\n */\nconst createSetStateAction = (params, file) => {\n  const component = file.components[params.componentId];\n  const stateKey = formatComponentStateSlotKey(component, params.stateSlot);\n  const valueExpression = generateJssyValueAST(params.value, null, file);\n\n  // this.setState({ /*stateKey*/: /*valueExpression*/ });\n  return t.expressionStatement(\n    t.callExpression(\n      t.memberExpression(t.thisExpression(), t.identifier('setState')),\n      [\n        t.objectExpression([\n          t.objectProperty(t.identifier(stateKey), valueExpression),\n        ]),\n      ]\n    )\n  );\n};\n\n/**\n *\n * @param {string} type\n * @param {Object} params\n * @param {ComponentFileModel} file\n * @return {ExpressionStatement}\n */\nconst createAction = ({ type, params }, file) => {\n  switch (type) {\n    case 'url':\n      return createActionUrl(params);\n    case 'navigate':\n      return createActionNavigate(params, file);\n    case 'method':\n      return createActionMethod(params, file);\n    case 'ajax':\n      return createActionAjax(params, file);\n    case 'prop':\n      return createPropAction(params, file);\n    case 'mutation':\n      return createMutationAction(params, file);\n    case 'setState':\n      return createSetStateAction(params, file);\n    default:\n      throw new Error(`Unknown action type: ${type}`);\n  }\n};\n\n/**\n *\n * @param {Path} path\n * @param {Array<Object>} actions\n * @param {ComponentFileModel} file\n * @return {{ handlerAST: ClassMethod, handlerBindingAST: ExpressionStatement }}\n */\nconst generateHandlerAST = ({ path, actions }, file) => {\n  const handlerName = formatHandlerName(path);\n  const actionExpressions = actions.map(action => createAction(action, file));\n\n  if (actionExpressions.length === 0) {\n    return {\n      handlerAST: null,\n      handlerBindingAST: null,\n    };\n  }\n\n  // /*handlerName*/(...args) {\n  //   /*actionExpressions*/\n  // }\n  const handlerAST = t.classMethod(\n    'method',\n    t.identifier(handlerName),\n    [t.restElement(t.identifier('args'))],\n    t.blockStatement(actionExpressions)\n  );\n\n  // this./*handlerName*/ = this./*handlerName*/.bind(this);\n  const handlerBindingAST = t.expressionStatement(\n    t.assignmentExpression(\n      '=',\n      t.memberExpression(t.thisExpression(), t.identifier(handlerName)),\n      t.callExpression(\n        t.memberExpression(\n          t.memberExpression(t.thisExpression(), t.identifier(handlerName)),\n          t.identifier('bind')\n        ),\n        [t.thisExpression()]\n      )\n    )\n  );\n\n  return { handlerAST, handlerBindingAST };\n};\n\nmodule.exports = generateHandlerAST;\n"]}