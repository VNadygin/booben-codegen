{"version":3,"sources":["../lib/names.js"],"names":["_","require","INVALID_ID","pascalCase","upperFirst","camelCase","str","exports","formatRouteComponentName","route","id","formatRouteIndexComponentName","formatComponentRefKey","component","formatComponentSaveRefMethodName","formatStateKeyForProp","propName","isSystemProp","formatComponentStateSlotKey","stateSlot","formatHandlerName","componentId","path","getComponentId","getPropName","formatDesignedComponentName","formatQueryNamespace","name","formatMutationNamespace","formatStyleClassName","routeName"],"mappings":"AAAA;;;;AAIA;;AAEA;;AAEA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;;eACuBA,QAAQ,aAAR,C;IAAfC,U,YAAAA,U;;AAER,IAAMC,aAAa,SAAbA,UAAa;AAAA,SAAOH,EAAEI,UAAF,CAAaJ,EAAEK,SAAF,CAAYC,GAAZ,CAAb,CAAP;AAAA,CAAnB;;AAEAC,QAAQC,wBAAR,GAAmC;AAAA,mBAAiBC,MAAMC,EAAvB;AAAA,CAAnC;;AAEAH,QAAQI,6BAAR,GAAwC;AAAA,mBAAiBF,MAAMC,EAAvB;AAAA,CAAxC;;AAEAH,QAAQK,qBAAR,GAAgC;AAAA,wBAA0BC,UAAUH,EAApC;AAAA,CAAhC;;AAEAH,QAAQO,gCAAR,GAA2C;AAAA,2BACzBD,UAAUH,EADe;AAAA,CAA3C;;AAGAH,QAAQQ,qBAAR,GAAgC,UAACF,SAAD,EAAYG,QAAZ,EAAsBC,YAAtB;AAAA,SAC9BA,6BACgBJ,UAAUH,EAD1B,UACiCM,QADjC,iBAEgBH,UAAUH,EAF1B,SAEgCM,QAHF;AAAA,CAAhC;;AAKAT,QAAQW,2BAAR,GAAsC,UAACL,SAAD,EAAYM,SAAZ;AAAA,uBACxBN,UAAUH,EADc,cACHS,SADG;AAAA,CAAtC;;AAGAZ,QAAQa,iBAAR,GAA4B,gBAAQ;AAClC,MAAMC,cAAcC,KAAKC,cAAL,EAApB;AACA,MAAMP,WAAWM,KAAKE,WAAL,EAAjB;;AAEA,MAAIH,gBAAgBnB,UAAhB,IAA8B,CAACc,QAAnC,EAA6C;AAC3C,WAAO,EAAP;AACD;;AAED,6BAAyBK,WAAzB,GAAuCL,QAAvC;AACD,CATD;;AAWA;;;;;AAKAT,QAAQkB,2BAAR,GAAsC,gBAAQ;AAC5C,MAAMJ,cAAcC,KAAKC,cAAL,EAApB;AACA,MAAMP,WAAWM,KAAKE,WAAL,EAAjB;;AAEA,uBAAmBH,WAAnB,GAAiClB,WAAWa,QAAX,CAAjC;AACD,CALD;;AAOAT,QAAQmB,oBAAR,GAA+B,gBAAQ;AACrC,SAAUC,IAAV;AACD,CAFD;;AAIApB,QAAQqB,uBAAR,GAAkC,gBAAQ;AACxC,SAAUD,IAAV;AACD,CAFD;;AAIApB,QAAQsB,oBAAR,GAA+B,UAACC,SAAD,EAAYT,WAAZ,EAA4B;AACzD,SAAUS,SAAV,iBAA+BT,WAA/B;AACD,CAFD","file":"names.js","sourcesContent":["/**\n * @author Dmitriy Bizyaev\n */\n\n'use strict';\n\n// TODO: Make pretty names\n\nconst _ = require('lodash');\nconst { INVALID_ID } = require('./constants');\n\nconst pascalCase = str => _.upperFirst(_.camelCase(str));\n\nexports.formatRouteComponentName = route => `Route${route.id}`;\n\nexports.formatRouteIndexComponentName = route => `Route${route.id}Index`;\n\nexports.formatComponentRefKey = component => `_component${component.id}Ref`;\n\nexports.formatComponentSaveRefMethodName = component =>\n  `saveComponent${component.id}Ref`;\n\nexports.formatStateKeyForProp = (component, propName, isSystemProp) =>\n  isSystemProp\n    ? `component${component.id}__${propName}`\n    : `component${component.id}_${propName}`;\n\nexports.formatComponentStateSlotKey = (component, stateSlot) =>\n  `component${component.id}State_${stateSlot}`;\n\nexports.formatHandlerName = path => {\n  const componentId = path.getComponentId();\n  const propName = path.getPropName();\n\n  if (componentId === INVALID_ID || !propName) {\n    return '';\n  }\n\n  return `handleComponent${componentId}${propName}`;\n};\n\n/**\n *\n * @param {Path} path\n * @return {string}\n */\nexports.formatDesignedComponentName = path => {\n  const componentId = path.getComponentId();\n  const propName = path.getPropName();\n\n  return `Component${componentId}${pascalCase(propName)}`;\n};\n\nexports.formatQueryNamespace = name => {\n  return `${name}Query`;\n};\n\nexports.formatMutationNamespace = name => {\n  return `${name}Mutation`;\n};\n\nexports.formatStyleClassName = (routeName, componentId) => {\n  return `${routeName}Component${componentId}`;\n};\n"]}