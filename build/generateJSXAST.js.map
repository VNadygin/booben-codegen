{"version":3,"sources":["../lib/generateJSXAST.js"],"names":["t","require","generateJssyValueAST","Path","parseComponentName","INVALID_ID","formatComponentSaveRefMethodName","formatStateKeyForProp","formatDesignedComponentName","formatComponentStateSlotKey","formatStyleClassName","generateRefAttribute","jSXAttribute","jSXIdentifier","jSXExpressionContainer","memberExpression","thisExpression","identifier","methodName","generateStateAttribute","propName","stateKey","generateCssAttribute","stringLiteral","name","generateAttribute","component","file","model","propFromState","propsState","get","id","has","callExpression","path","type","StepTypes","COMPONENT_ID","value","SWITCH","COMPONENT_PROP_NAME","valueExpression","props","isStringLiteral","generateText","textComponent","wrap","text","textAST","jSXText","generateRouterSwitchElement","outletComponent","route","routes","routeId","children","length","childRouteElements","map","childRoute","childRouteId","childRouteComponentName","jSXElement","jSXOpeningElement","fullPath","haveIndex","indexRouteFile","indexFile","indexRouteComponentName","unshift","jSXClosingElement","generateList","listComponent","data","dataPropPath","itemComponentPropPath","itemComponentName","expression","arrowFunctionExpression","generateJSXElement","nullLiteral","componentName","namespace","isRootComponent","parentId","Error","attributes","Object","keys","css","push","refs","activeStateSlots","stateSlots","values","childElements","forEach","childElement","components","childId","isSelfClosing","generateJSXAST","rootComponent","rootComponentId","module","exports"],"mappings":"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","file":"generateJSXAST.js","sourcesContent":["'use strict';\n\nconst t = require('babel-types');\nconst generateJssyValueAST = require('./generateJssyValueAST');\nconst Path = require('./Path');\nconst { parseComponentName } = require('./misc');\nconst { INVALID_ID } = require('./constants');\n\nconst {\n  formatComponentSaveRefMethodName,\n  formatStateKeyForProp,\n  formatDesignedComponentName,\n  formatComponentStateSlotKey,\n  formatStyleClassName,\n} = require('./names');\n\n/**\n *\n * @param {string} methodName\n * @return {JSXAttribute}\n */\nconst generateRefAttribute = methodName =>\n  t.jSXAttribute(\n    t.jSXIdentifier('ref'),\n    t.jSXExpressionContainer(\n      t.memberExpression(t.thisExpression, t.identifier(methodName))\n    )\n  );\n\nconst generateStateAttribute = (propName, stateKey) =>\n  t.jSXAttribute(\n    t.jSXIdentifier(propName),\n    t.jSXExpressionContainer(\n      t.memberExpression(\n        t.memberExpression(t.thisExpression(), t.identifier('state')),\n        t.identifier(stateKey)\n      )\n    )\n  );\n\nconst generateCssAttribute = name =>\n  t.jSXAttribute(t.jSXIdentifier('className'), t.stringLiteral(name));\n\n/**\n *\n * @param {string} propName\n * @param {Object} component\n * @param {ComponentFileModel} file\n * @return {JSXAttribute}\n */\nconst generateAttribute = (propName, component, file, model) => {\n  const propFromState = file.propsState.get(component.id);\n  if (propFromState && propFromState.has(propName)) {\n    const stateKey = formatStateKeyForProp(component, propName, false);\n\n    // /*propName*/={this.state./*stateKey*/()}\n    return t.jSXAttribute(\n      t.jSXIdentifier(propName),\n      t.jSXExpressionContainer(\n        t.callExpression(\n          t.memberExpression(\n            t.memberExpression(t.thisExpression(), t.identifier('state')),\n            t.identifier(stateKey)\n          ),\n          []\n        )\n      )\n    );\n  } else {\n    const path = new Path([\n      { type: Path.StepTypes.COMPONENT_ID, value: component.id },\n      { type: Path.StepTypes.SWITCH, value: 'props' },\n      { type: Path.StepTypes.COMPONENT_PROP_NAME, value: propName },\n    ]);\n\n    const valueExpression = generateJssyValueAST(\n      component.props[propName],\n      path,\n      file,\n      model\n    );\n\n    if (t.isStringLiteral(valueExpression)) {\n      // /*propName*/=\"/*valueExpression*/\"\n      return t.jSXAttribute(t.jSXIdentifier(propName), valueExpression);\n    } else {\n      // /*propName*/={/*valueExpression*/}\n      return t.jSXAttribute(\n        t.jSXIdentifier(propName),\n        t.jSXExpressionContainer(valueExpression)\n      );\n    }\n  }\n};\n\n/**\n *\n * @param {Object} textComponent\n * @param {ComponentFileModel} file\n * @param {boolean} wrap\n * @return {JSXText|JSXExpressionContainer|Expression}\n */\nconst generateText = (textComponent, file, wrap) => {\n  if (!textComponent.props.text) {\n    return null;\n  }\n\n  const path = new Path([\n    { type: Path.StepTypes.COMPONENT_ID, value: textComponent.id },\n    { type: Path.StepTypes.SWITCH, value: 'props' },\n    { type: Path.StepTypes.COMPONENT_PROP_NAME, value: 'text' },\n  ]);\n\n  const textAST = generateJssyValueAST(textComponent.props.text, path, file);\n\n  if (wrap) {\n    if (t.isStringLiteral(textAST)) {\n      return t.jSXText(textAST.value);\n    } else {\n      return t.jSXExpressionContainer(textAST);\n    }\n  } else {\n    return textAST;\n  }\n};\n\n/**\n *\n * @param {Object} outletComponent\n * @param {ComponentFileModel} file\n * @param {JssyProjectModel} model\n * @return {JSXElement}\n */\nconst generateRouterSwitchElement = (outletComponent, file, model) => {\n  const route = model.routes[file.routeId];\n\n  if (route.children.length === 0) {\n    return null;\n  }\n\n  const childRouteElements = route.children.map(childRouteId => {\n    const childRoute = model.routes[childRouteId];\n    const childRouteComponentName = childRoute.file.name;\n\n    return t.jSXElement(\n      t.jSXOpeningElement(\n        t.jSXIdentifier('Route'),\n        [\n          t.jSXAttribute(\n            t.jSXIdentifier('path'),\n            t.stringLiteral(childRoute.fullPath)\n          ),\n          t.jSXAttribute(\n            t.jSXIdentifier('component'),\n            t.jSXExpressionContainer(t.identifier(childRouteComponentName))\n          ),\n        ],\n        true\n      ),\n      null,\n      []\n    );\n  });\n\n  if (route.haveIndex) {\n    const indexRouteFile = route.indexFile;\n    const indexRouteComponentName = indexRouteFile.name;\n\n    childRouteElements.unshift(\n      t.jSXElement(\n        t.jSXOpeningElement(\n          t.jSXIdentifier('Route'),\n          [\n            t.jSXAttribute(\n              t.jSXIdentifier('path'),\n              t.stringLiteral(route.fullPath)\n            ),\n            t.jSXAttribute(t.jSXIdentifier('exact')),\n            t.jSXAttribute(\n              t.jSXIdentifier('component'),\n              t.jSXExpressionContainer(t.identifier(indexRouteComponentName))\n            ),\n          ],\n          true\n        ),\n        null,\n        []\n      )\n    );\n  }\n\n  return t.jSXElement(\n    t.jSXOpeningElement(t.jSXIdentifier('Switch'), []),\n    t.jSXClosingElement(t.jSXIdentifier('Switch')),\n    childRouteElements\n  );\n};\n\n/**\n *\n * @param {Object} listComponent\n * @param {ComponentFileModel} file\n * @param {boolean} wrap\n * @return {JSXExpressionContainer|Expression}\n */\nconst generateList = (listComponent, file, wrap) => {\n  if (!listComponent.props.data || !listComponent.props.component) {\n    return null;\n  }\n\n  const dataPropPath = new Path([\n    { type: Path.StepTypes.COMPONENT_ID, value: listComponent.id },\n    { type: Path.StepTypes.SWITCH, value: 'props' },\n    { type: Path.StepTypes.COMPONENT_PROP_NAME, value: 'data' },\n  ]);\n\n  const itemComponentPropPath = new Path([\n    { type: Path.StepTypes.COMPONENT_ID, value: listComponent.id },\n    { type: Path.StepTypes.SWITCH, value: 'props' },\n    { type: Path.StepTypes.COMPONENT_PROP_NAME, value: 'component' },\n  ]);\n\n  const itemComponentName = formatDesignedComponentName(itemComponentPropPath);\n\n  // /* dataValue */.map((item, idx) => </* ComponentName */ key={idx} item={item} />)\n  const expression = t.callExpression(\n    t.memberExpression(\n      generateJssyValueAST(listComponent.props.data, dataPropPath, file),\n      t.identifier('map')\n    ),\n    [\n      t.arrowFunctionExpression(\n        [t.identifier('item'), t.identifier('idx')],\n        t.jSXElement(\n          t.jSXOpeningElement(\n            t.jSXIdentifier(itemComponentName),\n            [\n              t.jSXAttribute(\n                t.jSXIdentifier('key'),\n                t.jSXExpressionContainer(t.identifier('idx'))\n              ),\n              t.jSXAttribute(\n                t.jSXIdentifier('item'),\n                t.jSXExpressionContainer(t.identifier('item'))\n              ),\n            ],\n            true\n          ),\n          null,\n          []\n        ),\n        false\n      ),\n    ]\n  );\n\n  return wrap ? t.jSXExpressionContainer(expression) : expression;\n};\n\n/**\n *\n * @param {Object} component\n * @param {ComponentFileModel} file\n * @param {JssyProjectModel} model\n * @return {JSXElement|JSXText|JSXExpressionContainer}\n */\nconst generateJSXElement = (component, file, model) => {\n  if (!component) return t.nullLiteral();\n  const { id, name: componentName, props, children } = component;\n  const { namespace, name } = parseComponentName(componentName);\n  if (namespace === '') {\n    const isRootComponent = component.parentId === INVALID_ID;\n\n    if (name === 'Text') {\n      return generateText(component, file, !isRootComponent);\n    } else if (name === 'List') {\n      return generateList(component, file, !isRootComponent);\n    } else if (name === 'Outlet') {\n      return generateRouterSwitchElement(component, file, model);\n    } else {\n      throw new Error(`Unknown pseudo-component: ${name}`);\n    }\n  }\n\n  const attributes = Object.keys(props).map(propName => {\n    return generateAttribute(propName, component, file, model);\n  });\n\n  if (file.css.has(id)) {\n    const name = formatStyleClassName(file.name, id);\n    attributes.push(generateCssAttribute(name));\n  }\n\n  if (file.refs.has(id)) {\n    const methodName = formatComponentSaveRefMethodName(component);\n    attributes.push(generateRefAttribute(methodName));\n  }\n\n  if (file.activeStateSlots.has(id)) {\n    const stateSlots = file.activeStateSlots.get(id);\n    for (const propName of stateSlots.values()) {\n      const stateKey = formatComponentStateSlotKey(component, propName);\n      attributes.push(generateStateAttribute(propName, stateKey));\n    }\n  }\n\n  const childElements = [];\n  children.forEach(childId => {\n    const childElement = generateJSXElement(\n      file.components[childId],\n      file,\n      model\n    );\n\n    if (childElement !== null) {\n      childElements.push(childElement);\n    }\n  });\n\n  const isSelfClosing = childElements.length === 0;\n\n  return t.jSXElement(\n    t.jSXOpeningElement(t.jSXIdentifier(name), attributes, isSelfClosing),\n    isSelfClosing ? null : t.jSXClosingElement(t.jSXIdentifier(name)),\n    childElements\n  );\n};\n\n/**\n *\n * @param {ComponentFileModel} file\n * @param {JssyProjectModel} model\n * @return {JSXElement}\n */\nconst generateJSXAST = (file, model) => {\n  const rootComponent = file.components[file.rootComponentId];\n  return generateJSXElement(rootComponent, file, model);\n};\n\nmodule.exports = generateJSXAST;\n"]}