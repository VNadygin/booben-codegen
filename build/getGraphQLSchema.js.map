{"version":3,"sources":["../lib/getGraphQLSchema.js"],"names":["request","require","introspectionQuery","getGraphQLSchema","graphqlEndpointURL","url","method","body","query","headers","json","data","error","Error","__schema","module","exports"],"mappings":";;;;AAAA;;;;AAIA,IAAMA,UAAUC,QAAQ,wBAAR,CAAhB;;eAC+BA,QAAQ,mBAAR,C;IAAvBC,kB,YAAAA,kB;;AAER;;;;;;;AAKA,IAAMC;AAAA,qEAAmB,iBAAMC,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJJ,QAAQ;AACzBK,mBAAKD,kBADoB;AAEzBE,sBAAQ,MAFiB;AAGzBC,oBAAM;AACJC,uBAAON;AADH,eAHmB;AAMzBO,uBAAS;AACP,gCAAgB;AADT,eANgB;AASzBC,oBAAM;AATmB,aAAR,CADI;;AAAA;AACjBC,gBADiB;;AAAA,iBAanBA,KAAKC,KAbc;AAAA;AAAA;AAAA;;AAAA,kBAcf,IAAIC,KAAJ,CAAUF,KAAKC,KAAf,CAde;;AAAA;AAAA,kBAiBnB,CAACD,KAAKA,IAAN,IAAc,CAACA,KAAKA,IAAL,CAAUG,QAjBN;AAAA;AAAA;AAAA;;AAAA,kBAkBf,IAAID,KAAJ,CACJ,4DADI,CAlBe;;AAAA;AAAA,6CAuBhBF,KAAKA,IAAL,CAAUG,QAvBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA0BAC,OAAOC,OAAP,GAAiBb,gBAAjB","file":"getGraphQLSchema.js","sourcesContent":["/**\n * @author Dmitriy Bizyaev\n */\n\nconst request = require('request-promise-native');\nconst { introspectionQuery } = require('graphql/utilities');\n\n/**\n *\n * @param {string} graphqlEndpointURL\n * @return {Promise<GQLSchema>}\n */\nconst getGraphQLSchema = async graphqlEndpointURL => {\n  const data = await request({\n    url: graphqlEndpointURL,\n    method: 'POST',\n    body: {\n      query: introspectionQuery,\n    },\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    json: true,\n  });\n\n  if (data.error) {\n    throw new Error(data.error);\n  }\n\n  if (!data.data || !data.data.__schema) {\n    throw new Error(\n      \"getGraphQLSchema(): server response doesn't contain schema\"\n    );\n  }\n\n  return data.data.__schema;\n};\n\nmodule.exports = getGraphQLSchema;\n"]}