{"version":3,"sources":["../lib/generateStateAST.js"],"names":["t","require","generateJssyValue","Path","getComponentMeta","formatStateKeyForProp","formatComponentStateSlotKey","generateState","file","model","statePropertyASTs","propsState","forEach","propNames","componentId","component","components","stateKey","propName","path","type","StepTypes","COMPONENT_ID","value","SWITCH","COMPONENT_PROP_NAME","initialValue","props","statePropertyAST","objectProperty","identifier","arrowFunctionExpression","push","systemPropsState","systemProps","activeStateSlots","componentMeta","name","meta","Error","stateSlotMeta","state","stateSlot","length","expressionStatement","assignmentExpression","memberExpression","thisExpression","objectExpression","module","exports"],"mappings":"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","file":"generateStateAST.js","sourcesContent":["'use strict';\n\nconst t = require('babel-types');\nconst generateJssyValue = require('./generateJssyValueAST');\nconst Path = require('./Path');\nconst { getComponentMeta } = require('./misc');\n\nconst {\n  formatStateKeyForProp,\n  formatComponentStateSlotKey,\n} = require('./names');\n\n/**\n *\n * @param {ComponentFileModel} file\n * @param {Object} model\n * @return {?ExpressionStatement}\n */\nconst generateState = (file, model) => {\n  const statePropertyASTs = [];\n\n  file.propsState.forEach((propNames, componentId) => {\n    const component = file.components[componentId];\n\n    propNames.forEach(propName => {\n      const stateKey = formatStateKeyForProp(component, propName, false);\n      const path = new Path([\n        { type: Path.StepTypes.COMPONENT_ID, value: componentId },\n        { type: Path.StepTypes.SWITCH, value: 'props' },\n        { type: Path.StepTypes.COMPONENT_PROP_NAME, value: propName },\n      ]);\n\n      const initialValue = generateJssyValue(\n        component.props[propName],\n        path,\n        file\n      );\n\n      // stateKey: () => /*initialValue*/\n      const statePropertyAST = t.objectProperty(\n        t.identifier(stateKey),\n        t.arrowFunctionExpression([], initialValue)\n      );\n\n      statePropertyASTs.push(statePropertyAST);\n    });\n  });\n\n  file.systemPropsState.forEach((propNames, componentId) => {\n    const component = file.components[componentId];\n\n    propNames.forEach(propName => {\n      const stateKey = formatStateKeyForProp(component, propName, true);\n      const path = new Path([\n        { type: Path.StepTypes.COMPONENT_ID, value: componentId },\n        { type: Path.StepTypes.SWITCH, value: 'systemProps' },\n        { type: Path.StepTypes.COMPONENT_PROP_NAME, value: propName },\n      ]);\n\n      const initialValue = generateJssyValue(\n        component.systemProps[propName],\n        path,\n        file\n      );\n\n      // stateKey: () => /*initialValue*/\n      const statePropertyAST = t.objectProperty(\n        t.identifier(stateKey),\n        t.arrowFunctionExpression([], initialValue)\n      );\n\n      statePropertyASTs.push(statePropertyAST);\n    });\n  });\n\n  file.activeStateSlots.forEach((activeStateSlots, componentId) => {\n    const component = file.components[componentId];\n    const componentMeta = getComponentMeta(component.name, model.meta);\n\n    if (componentMeta === null) {\n      throw new Error(\n        `Failed to get metadata for component '${component.name}'`\n      );\n    }\n\n    activeStateSlots.forEach(stateSlot => {\n      const stateSlotMeta = componentMeta.state[stateSlot];\n      const stateKey = formatComponentStateSlotKey(component, stateSlot);\n      const initialValue = generateJssyValue(\n        stateSlotMeta.initialValue,\n        null,\n        file\n      );\n\n      // stateKey: () => /*initialValue*/\n      const statePropertyAST = t.objectProperty(\n        t.identifier(stateKey),\n        initialValue\n      );\n\n      statePropertyASTs.push(statePropertyAST);\n    });\n  });\n\n  if (statePropertyASTs.length === 0) {\n    return null;\n  }\n\n  // this.state = { /*statePropertyASTs*/ }\n  return t.expressionStatement(\n    t.assignmentExpression(\n      '=',\n      t.memberExpression(t.thisExpression(), t.identifier('state')),\n      t.objectExpression(statePropertyASTs)\n    )\n  );\n};\n\nmodule.exports = generateState;\n"]}