{"version":3,"sources":["../lib/archiveProject.js"],"names":["fs","require","archiver","path","archiveProject","Promise","resolve","reject","output","createWriteStream","join","cwd","archive","pipe","directory","finalize","on","err","module","exports"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,OAAR,CAAX;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA,IAAMG,iBAAiB,SAAjBA,cAAiB,MAAO;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,SAASR,GAAGS,iBAAH,CAAqBN,KAAKO,IAAL,CAAUC,GAAV,EAAe,cAAf,CAArB,CAAf;AACA,QAAMC,UAAUV,SAAS,KAAT,CAAhB;;AAEAU,YAAQC,IAAR,CAAaL,MAAb;AACAI,YAAQE,SAAR,CAAkBH,GAAlB,EAAuB,KAAvB;AACAC,YAAQG,QAAR;;AAEAP,WAAOQ,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BV;AACD,KAFD;;AAIA;AACAM,YAAQI,EAAR,CAAW,OAAX,EAAoB,UAASC,GAAT,EAAc;AAChCV,aAAOU,GAAP;AACD,KAFD;AAGD,GAhBM,CAAP;AAiBD,CAlBD;;AAoBAC,OAAOC,OAAP,GAAiBf,cAAjB","file":"archiveProject.js","sourcesContent":["const fs = require('mz/fs');\nconst archiver = require('archiver');\nconst path = require('path');\n\nconst archiveProject = cwd => {\n  return new Promise((resolve, reject) => {\n    const output = fs.createWriteStream(path.join(cwd, '/project.zip'));\n    const archive = archiver('zip');\n\n    archive.pipe(output);\n    archive.directory(cwd, false);\n    archive.finalize();\n\n    output.on('close', function() {\n      resolve();\n    });\n\n    // good practice to catch this error explicitly\n    archive.on('error', function(err) {\n      reject(err)\n    });\n  });\n};\n\nmodule.exports = archiveProject;\n"]}